digraph "legalize input for addarrays:vector.body" {
	rankdir="BT";
	label="legalize input for addarrays:vector.body";

	Node0x11e2f68 [shape=record,shape=Mrecord,label="{EntryToken|t0|{<d0>ch}}"];
	Node0x129b260 [shape=record,shape=Mrecord,label="{Register %2|t1|{<d0>i64}}"];
	Node0x1297e50 [shape=record,shape=Mrecord,label="{Register %1|t3|{<d0>i64}}"];
	Node0x1297428 [shape=record,shape=Mrecord,label="{Register %0|t5|{<d0>i64}}"];
	Node0x128fae0 [shape=record,shape=Mrecord,label="{Constant\<0\>|t7|{<d0>i64}}"];
	Node0x129bef8 [shape=record,shape=Mrecord,label="{undef|t8|{<d0>i64}}"];
	Node0x12944f0 [shape=record,shape=Mrecord,label="{Register %3|t14|{<d0>i64}}"];
	Node0x1294968 [shape=record,shape=Mrecord,label="{Constant\<-8\>|t16|{<d0>i64}}"];
	Node0x12975c8 [shape=record,shape=Mrecord,label="{Register %4|t18|{<d0>i64}}"];
	Node0x129b190 [shape=record,shape=Mrecord,label="{Constant\<32\>|t20|{<d0>i64}}"];
	Node0x128f0b8 [shape=record,shape=Mrecord,label="{Register %5|t22|{<d0>i64}}"];
	Node0x128fb48 [shape=record,shape=Mrecord,label="{Register %6|t25|{<d0>i64}}"];
	Node0x128fce8 [shape=record,shape=Mrecord,label="{Register %7|t28|{<d0>i64}}"];
	Node0x128f940 [shape=record,shape=Mrecord,label="{Constant\<992\>|t32|{<d0>i64}}"];
	Node0x1297cb0 [shape=record,shape=Mrecord,label="{Register %39|t33|{<d0>i64}}"];
	Node0x128f050 [shape=record,shape=Mrecord,label="{BasicBlock\<vector.body 0x12c8208\>|t38|{<d0>ch}}"];
	Node0x1294c40 [shape=record,shape=Mrecord,label="{BasicBlock\<for.body.preheader 0x12c8488\>|t40|{<d0>ch}}"];
	Node0x1294d78 [shape=record,shape=Mrecord,label="{setne|t42|{<d0>ch}}"];
	Node0x12946f8 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t2|{<d0>i64|<d1>ch}}"];
	Node0x12946f8:s0 -> Node0x11e2f68:d0[color=blue,style=dashed];
	Node0x12946f8:s1 -> Node0x129b260:d0;
	Node0x129b2c8 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t4|{<d0>i64|<d1>ch}}"];
	Node0x129b2c8:s0 -> Node0x11e2f68:d0[color=blue,style=dashed];
	Node0x129b2c8:s1 -> Node0x1297e50:d0;
	Node0x1294e48 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t6|{<d0>i64|<d1>ch}}"];
	Node0x1294e48:s0 -> Node0x11e2f68:d0[color=blue,style=dashed];
	Node0x1294e48:s1 -> Node0x1297428:d0;
	Node0x128ff58 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t15|{<d0>i64|<d1>ch}}"];
	Node0x128ff58:s0 -> Node0x11e2f68:d0[color=blue,style=dashed];
	Node0x128ff58:s1 -> Node0x12944f0:d0;
	Node0x1295120 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|CopyToReg|t34|{<d0>ch}}"];
	Node0x1295120:s0 -> Node0x11e2f68:d0[color=blue,style=dashed];
	Node0x1295120:s1 -> Node0x1297cb0:d0;
	Node0x1295120:s2 -> Node0x128f940:d0;
	Node0x1294b70 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|add|t21|{<d0>i64}}"];
	Node0x1294b70:s0 -> Node0x12946f8:d0;
	Node0x1294b70:s1 -> Node0x129b190:d0;
	Node0x128fa10 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|add|t24|{<d0>i64}}"];
	Node0x128fa10:s0 -> Node0x129b2c8:d0;
	Node0x128fa10:s1 -> Node0x129b190:d0;
	Node0x128fd50 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|load\<(load (s256) from %ir.lsr.iv1517, align 4, !tbaa !48, !alias.scope !71)\>|t10|{<d0>v8i32|<d1>ch}}"];
	Node0x128fd50:s0 -> Node0x11e2f68:d0[color=blue,style=dashed];
	Node0x128fd50:s1 -> Node0x129b2c8:d0;
	Node0x128fd50:s2 -> Node0x129bef8:d0;
	Node0x128f738 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|add|t27|{<d0>i64}}"];
	Node0x128f738:s0 -> Node0x1294e48:d0;
	Node0x128f738:s1 -> Node0x129b190:d0;
	Node0x129b538 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|load\<(load (s256) from %ir.lsr.iv1820, align 4, !tbaa !48, !alias.scope !67)\>|t9|{<d0>v8i32|<d1>ch}}"];
	Node0x129b538:s0 -> Node0x11e2f68:d0[color=blue,style=dashed];
	Node0x129b538:s1 -> Node0x1294e48:d0;
	Node0x129b538:s2 -> Node0x129bef8:d0;
	Node0x1294fe8 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|add nsw|t17|{<d0>i64}}"];
	Node0x1294fe8:s0 -> Node0x128ff58:d0;
	Node0x1294fe8:s1 -> Node0x1294968:d0;
	Node0x128fe20 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|CopyToReg|t23|{<d0>ch}}"];
	Node0x128fe20:s0 -> Node0x11e2f68:d0[color=blue,style=dashed];
	Node0x128fe20:s1 -> Node0x128f0b8:d0;
	Node0x128fe20:s2 -> Node0x1294b70:d0;
	Node0x128f258 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|CopyToReg|t26|{<d0>ch}}"];
	Node0x128f258:s0 -> Node0x11e2f68:d0[color=blue,style=dashed];
	Node0x128f258:s1 -> Node0x128fb48:d0;
	Node0x128f258:s2 -> Node0x128fa10:d0;
	Node0x128f1f0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|CopyToReg|t29|{<d0>ch}}"];
	Node0x128f1f0:s0 -> Node0x11e2f68:d0[color=blue,style=dashed];
	Node0x128f1f0:s1 -> Node0x128fce8:d0;
	Node0x128f1f0:s2 -> Node0x128f738:d0;
	Node0x128fef0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|TokenFactor|t12|{<d0>ch}}"];
	Node0x128fef0:s0 -> Node0x129b538:d1[color=blue,style=dashed];
	Node0x128fef0:s1 -> Node0x128fd50:d1[color=blue,style=dashed];
	Node0x12978a0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|setcc|t45|{<d0>i64}}"];
	Node0x12978a0:s0 -> Node0x1294fe8:d0;
	Node0x12978a0:s1 -> Node0x128fae0:d0;
	Node0x12978a0:s2 -> Node0x1294d78:d0[color=blue,style=dashed];
	Node0x128fc18 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|CopyToReg|t19|{<d0>ch}}"];
	Node0x128fc18:s0 -> Node0x11e2f68:d0[color=blue,style=dashed];
	Node0x128fc18:s1 -> Node0x12975c8:d0;
	Node0x128fc18:s2 -> Node0x1294fe8:d0;
	Node0x129b6d8 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2|<s3>3}|store\<(store (s256) into %ir.lsr.iv1214, align 4, !tbaa !48, !alias.scope !75, !noalias !77)\>|t13|{<d0>ch}}"];
	Node0x129b6d8:s0 -> Node0x128fef0:d0[color=blue,style=dashed];
	Node0x129b6d8:s1 -> Node0x12970e8:d0;
	Node0x129b6d8:s2 -> Node0x12946f8:d0;
	Node0x129b6d8:s3 -> Node0x129bef8:d0;
	Node0x1294830 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5}|TokenFactor|t37|{<d0>ch}}"];
	Node0x1294830:s0 -> Node0x128fc18:d0[color=blue,style=dashed];
	Node0x1294830:s1 -> Node0x128fe20:d0[color=blue,style=dashed];
	Node0x1294830:s2 -> Node0x128f258:d0[color=blue,style=dashed];
	Node0x1294830:s3 -> Node0x128f1f0:d0[color=blue,style=dashed];
	Node0x1294830:s4 -> Node0x1295120:d0[color=blue,style=dashed];
	Node0x1294830:s5 -> Node0x129b6d8:d0[color=blue,style=dashed];
	Node0x1297358 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|brcond|t44|{<d0>ch}}"];
	Node0x1297358:s0 -> Node0x1294830:d0[color=blue,style=dashed];
	Node0x1297358:s1 -> Node0x12978a0:d0;
	Node0x1297358:s2 -> Node0x128f050:d0[color=blue,style=dashed];
	Node0x12971b8 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|br|t41|{<d0>ch}}"];
	Node0x12971b8:s0 -> Node0x1297358:d0[color=blue,style=dashed];
	Node0x12971b8:s1 -> Node0x1294c40:d0[color=blue,style=dashed];
	Node0x129bd58 [shape=record,shape=Mrecord,label="{undef|t49|{<d0>nxv2i32}}"];
	Node0x129bae8 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|insert_subvector|t50|{<d0>nxv2i32}}"];
	Node0x129bae8:s0 -> Node0x129bd58:d0;
	Node0x129bae8:s1 -> Node0x128fd50:d0;
	Node0x129bae8:s2 -> Node0x128fae0:d0;
	Node0x129e1b0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|insert_subvector|t51|{<d0>nxv2i32}}"];
	Node0x129e1b0:s0 -> Node0x129bd58:d0;
	Node0x129e1b0:s1 -> Node0x129b538:d0;
	Node0x129e1b0:s2 -> Node0x128fae0:d0;
	Node0x1297a40 [shape=record,shape=Mrecord,label="{Constant\<8\>|t52|{<d0>i64}}"];
	Node0x1294628 [shape=record,shape=Mrecord,label="{{<s0>0}|RISCVISD::VMSET_VL|t53|{<d0>nxv2i1}}"];
	Node0x1294628:s0 -> Node0x1297a40:d0;
	Node0x129bdc0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2|<s3>3}|RISCVISD::ADD_VL|t54|{<d0>nxv2i32}}"];
	Node0x129bdc0:s0 -> Node0x129bae8:d0;
	Node0x129bdc0:s1 -> Node0x129e1b0:d0;
	Node0x129bdc0:s2 -> Node0x1294628:d0;
	Node0x129bdc0:s3 -> Node0x1297a40:d0;
	Node0x12970e8 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|extract_subvector|t55|{<d0>v8i32}}"];
	Node0x12970e8:s0 -> Node0x129bdc0:d0;
	Node0x12970e8:s1 -> Node0x128fae0:d0;
	Node0x0[ plaintext=circle, label ="GraphRoot"];
	Node0x0 -> Node0x12971b8:d0[color=blue,style=dashed];
}
