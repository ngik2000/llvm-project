digraph "Scheduling-Units Graph for sunit-dag.addarrays:vector.body" {
	rankdir="BT";
	label="Scheduling-Units Graph for sunit-dag.addarrays:vector.body";

	Node0x100e830 [shape=record,shape=Mrecord,label="{SU(0): PseudoBR|0x100e830}"];
	Node0x100e830 -> Node0x100e940[color=blue,style=dashed];
	Node0x100e940 [shape=record,shape=Mrecord,label="{SU(1): BNE|0x100e940}"];
	Node0x100e940 -> Node0x1011c40;
	Node0x100e940 -> Node0x1011b30;
	Node0x100e940 -> Node0x100ea50[color=blue,style=dashed];
	Node0x100ea50 [shape=record,shape=Mrecord,label="{SU(2): TokenFactor|0x100ea50}"];
	Node0x100ea50 -> Node0x1011a20[color=blue,style=dashed];
	Node0x100ea50 -> Node0x1011800[color=blue,style=dashed];
	Node0x100ea50 -> Node0x10115e0[color=blue,style=dashed];
	Node0x100ea50 -> Node0x10113c0[color=blue,style=dashed];
	Node0x100ea50 -> Node0x10111a0[color=blue,style=dashed];
	Node0x100ea50 -> Node0x1010f80[color=blue,style=dashed];
	Node0x100ea50 -> Node0x1010d60[color=blue,style=dashed];
	Node0x100ea50 -> Node0x1010b40[color=blue,style=dashed];
	Node0x100ea50 -> Node0x1010920[color=blue,style=dashed];
	Node0x100ea50 -> Node0x1010700[color=blue,style=dashed];
	Node0x100ea50 -> Node0x10104e0[color=blue,style=dashed];
	Node0x100ea50 -> Node0x10102c0[color=blue,style=dashed];
	Node0x100ea50 -> Node0x100eb60[color=blue,style=dashed];
	Node0x100eb60 [shape=record,shape=Mrecord,label="{SU(3): SW\<Mem:(store (s32) into %ir.lsr.iv1214 + 28, !tbaa !48, !alias.scope !75, !noalias !77)\>|0x100eb60}"];
	Node0x100eb60 -> Node0x10101b0;
	Node0x100eb60 -> Node0x10100a0;
	Node0x100eb60 -> Node0x100ec70[color=blue,style=dashed];
	Node0x100ec70 [shape=record,shape=Mrecord,label="{SU(4): TokenFactor|0x100ec70}"];
	Node0x100ec70 -> Node0x100ff90[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100fe80[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100fd70[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100fc60[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100fb50[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100fa40[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100f930[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100f710[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100f600[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100f4f0[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100f3e0[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100f2d0[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100f1c0[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100f0b0[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100efa0[color=blue,style=dashed];
	Node0x100ec70 -> Node0x100ed80[color=blue,style=dashed];
	Node0x100ed80 [shape=record,shape=Mrecord,label="{SU(5): LW\<Mem:(load (s32) from %ir.lsr.iv1517 + 28, !tbaa !48, !alias.scope !71)\>|0x100ed80}"];
	Node0x100ed80 -> Node0x100ee90;
	Node0x100ee90 [shape=record,shape=Mrecord,label="{SU(6): CopyFromReg|0x100ee90}"];
	Node0x100efa0 [shape=record,shape=Mrecord,label="{SU(7): LW\<Mem:(load (s32) from %ir.lsr.iv1517 + 24, !tbaa !48, !alias.scope !71)\>|0x100efa0}"];
	Node0x100efa0 -> Node0x100ee90;
	Node0x100f0b0 [shape=record,shape=Mrecord,label="{SU(8): LW\<Mem:(load (s32) from %ir.lsr.iv1517 + 20, !tbaa !48, !alias.scope !71)\>|0x100f0b0}"];
	Node0x100f0b0 -> Node0x100ee90;
	Node0x100f1c0 [shape=record,shape=Mrecord,label="{SU(9): LW\<Mem:(load (s32) from %ir.lsr.iv1517 + 16, !tbaa !48, !alias.scope !71)\>|0x100f1c0}"];
	Node0x100f1c0 -> Node0x100ee90;
	Node0x100f2d0 [shape=record,shape=Mrecord,label="{SU(10): LW\<Mem:(load (s32) from %ir.lsr.iv1517 + 12, !tbaa !48, !alias.scope !71)\>|0x100f2d0}"];
	Node0x100f2d0 -> Node0x100ee90;
	Node0x100f3e0 [shape=record,shape=Mrecord,label="{SU(11): LW\<Mem:(load (s32) from %ir.lsr.iv1517 + 8, !tbaa !48, !alias.scope !71)\>|0x100f3e0}"];
	Node0x100f3e0 -> Node0x100ee90;
	Node0x100f4f0 [shape=record,shape=Mrecord,label="{SU(12): LW\<Mem:(load (s32) from %ir.lsr.iv1517 + 4, !tbaa !48, !alias.scope !71)\>|0x100f4f0}"];
	Node0x100f4f0 -> Node0x100ee90;
	Node0x100f600 [shape=record,shape=Mrecord,label="{SU(13): LW\<Mem:(load (s32) from %ir.lsr.iv1517, !tbaa !48, !alias.scope !71)\>|0x100f600}"];
	Node0x100f600 -> Node0x100ee90;
	Node0x100f710 [shape=record,shape=Mrecord,label="{SU(14): LW\<Mem:(load (s32) from %ir.lsr.iv1820 + 28, !tbaa !48, !alias.scope !67)\>|0x100f710}"];
	Node0x100f710 -> Node0x100f820;
	Node0x100f820 [shape=record,shape=Mrecord,label="{SU(15): CopyFromReg|0x100f820}"];
	Node0x100f930 [shape=record,shape=Mrecord,label="{SU(16): LW\<Mem:(load (s32) from %ir.lsr.iv1820 + 24, !tbaa !48, !alias.scope !67)\>|0x100f930}"];
	Node0x100f930 -> Node0x100f820;
	Node0x100fa40 [shape=record,shape=Mrecord,label="{SU(17): LW\<Mem:(load (s32) from %ir.lsr.iv1820 + 20, !tbaa !48, !alias.scope !67)\>|0x100fa40}"];
	Node0x100fa40 -> Node0x100f820;
	Node0x100fb50 [shape=record,shape=Mrecord,label="{SU(18): LW\<Mem:(load (s32) from %ir.lsr.iv1820 + 16, !tbaa !48, !alias.scope !67)\>|0x100fb50}"];
	Node0x100fb50 -> Node0x100f820;
	Node0x100fc60 [shape=record,shape=Mrecord,label="{SU(19): LW\<Mem:(load (s32) from %ir.lsr.iv1820 + 12, !tbaa !48, !alias.scope !67)\>|0x100fc60}"];
	Node0x100fc60 -> Node0x100f820;
	Node0x100fd70 [shape=record,shape=Mrecord,label="{SU(20): LW\<Mem:(load (s32) from %ir.lsr.iv1820 + 8, !tbaa !48, !alias.scope !67)\>|0x100fd70}"];
	Node0x100fd70 -> Node0x100f820;
	Node0x100fe80 [shape=record,shape=Mrecord,label="{SU(21): LW\<Mem:(load (s32) from %ir.lsr.iv1820 + 4, !tbaa !48, !alias.scope !67)\>|0x100fe80}"];
	Node0x100fe80 -> Node0x100f820;
	Node0x100ff90 [shape=record,shape=Mrecord,label="{SU(22): LW\<Mem:(load (s32) from %ir.lsr.iv1820, !tbaa !48, !alias.scope !67)\>|0x100ff90}"];
	Node0x100ff90 -> Node0x100f820;
	Node0x10100a0 [shape=record,shape=Mrecord,label="{SU(23): CopyFromReg|0x10100a0}"];
	Node0x10101b0 [shape=record,shape=Mrecord,label="{SU(24): ADD|0x10101b0}"];
	Node0x10101b0 -> Node0x100ed80;
	Node0x10101b0 -> Node0x100f710;
	Node0x10102c0 [shape=record,shape=Mrecord,label="{SU(25): SW\<Mem:(store (s32) into %ir.lsr.iv1214 + 24, !tbaa !48, !alias.scope !75, !noalias !77)\>|0x10102c0}"];
	Node0x10102c0 -> Node0x10103d0;
	Node0x10102c0 -> Node0x10100a0;
	Node0x10102c0 -> Node0x100ec70[color=blue,style=dashed];
	Node0x10103d0 [shape=record,shape=Mrecord,label="{SU(26): ADD|0x10103d0}"];
	Node0x10103d0 -> Node0x100efa0;
	Node0x10103d0 -> Node0x100f930;
	Node0x10104e0 [shape=record,shape=Mrecord,label="{SU(27): SW\<Mem:(store (s32) into %ir.lsr.iv1214 + 20, !tbaa !48, !alias.scope !75, !noalias !77)\>|0x10104e0}"];
	Node0x10104e0 -> Node0x10105f0;
	Node0x10104e0 -> Node0x10100a0;
	Node0x10104e0 -> Node0x100ec70[color=blue,style=dashed];
	Node0x10105f0 [shape=record,shape=Mrecord,label="{SU(28): ADD|0x10105f0}"];
	Node0x10105f0 -> Node0x100f0b0;
	Node0x10105f0 -> Node0x100fa40;
	Node0x1010700 [shape=record,shape=Mrecord,label="{SU(29): SW\<Mem:(store (s32) into %ir.lsr.iv1214 + 16, !tbaa !48, !alias.scope !75, !noalias !77)\>|0x1010700}"];
	Node0x1010700 -> Node0x1010810;
	Node0x1010700 -> Node0x10100a0;
	Node0x1010700 -> Node0x100ec70[color=blue,style=dashed];
	Node0x1010810 [shape=record,shape=Mrecord,label="{SU(30): ADD|0x1010810}"];
	Node0x1010810 -> Node0x100f1c0;
	Node0x1010810 -> Node0x100fb50;
	Node0x1010920 [shape=record,shape=Mrecord,label="{SU(31): SW\<Mem:(store (s32) into %ir.lsr.iv1214 + 12, !tbaa !48, !alias.scope !75, !noalias !77)\>|0x1010920}"];
	Node0x1010920 -> Node0x1010a30;
	Node0x1010920 -> Node0x10100a0;
	Node0x1010920 -> Node0x100ec70[color=blue,style=dashed];
	Node0x1010a30 [shape=record,shape=Mrecord,label="{SU(32): ADD|0x1010a30}"];
	Node0x1010a30 -> Node0x100f2d0;
	Node0x1010a30 -> Node0x100fc60;
	Node0x1010b40 [shape=record,shape=Mrecord,label="{SU(33): SW\<Mem:(store (s32) into %ir.lsr.iv1214 + 8, !tbaa !48, !alias.scope !75, !noalias !77)\>|0x1010b40}"];
	Node0x1010b40 -> Node0x1010c50;
	Node0x1010b40 -> Node0x10100a0;
	Node0x1010b40 -> Node0x100ec70[color=blue,style=dashed];
	Node0x1010c50 [shape=record,shape=Mrecord,label="{SU(34): ADD|0x1010c50}"];
	Node0x1010c50 -> Node0x100f3e0;
	Node0x1010c50 -> Node0x100fd70;
	Node0x1010d60 [shape=record,shape=Mrecord,label="{SU(35): SW\<Mem:(store (s32) into %ir.lsr.iv1214 + 4, !tbaa !48, !alias.scope !75, !noalias !77)\>|0x1010d60}"];
	Node0x1010d60 -> Node0x1010e70;
	Node0x1010d60 -> Node0x10100a0;
	Node0x1010d60 -> Node0x100ec70[color=blue,style=dashed];
	Node0x1010e70 [shape=record,shape=Mrecord,label="{SU(36): ADD|0x1010e70}"];
	Node0x1010e70 -> Node0x100f4f0;
	Node0x1010e70 -> Node0x100fe80;
	Node0x1010f80 [shape=record,shape=Mrecord,label="{SU(37): SW\<Mem:(store (s32) into %ir.lsr.iv1214, !tbaa !48, !alias.scope !75, !noalias !77)\>|0x1010f80}"];
	Node0x1010f80 -> Node0x1011090;
	Node0x1010f80 -> Node0x10100a0;
	Node0x1010f80 -> Node0x100ec70[color=blue,style=dashed];
	Node0x1011090 [shape=record,shape=Mrecord,label="{SU(38): ADD|0x1011090}"];
	Node0x1011090 -> Node0x100f600;
	Node0x1011090 -> Node0x100ff90;
	Node0x10111a0 [shape=record,shape=Mrecord,label="{SU(39): CopyToReg|0x10111a0}"];
	Node0x10111a0 -> Node0x10112b0;
	Node0x10112b0 [shape=record,shape=Mrecord,label="{SU(40): ADDI|0x10112b0}"];
	Node0x10113c0 [shape=record,shape=Mrecord,label="{SU(41): CopyToReg|0x10113c0}"];
	Node0x10113c0 -> Node0x10114d0;
	Node0x10114d0 [shape=record,shape=Mrecord,label="{SU(42): ADDI|0x10114d0}"];
	Node0x10114d0 -> Node0x100f820;
	Node0x10115e0 [shape=record,shape=Mrecord,label="{SU(43): CopyToReg|0x10115e0}"];
	Node0x10115e0 -> Node0x10116f0;
	Node0x10116f0 [shape=record,shape=Mrecord,label="{SU(44): ADDI|0x10116f0}"];
	Node0x10116f0 -> Node0x100ee90;
	Node0x1011800 [shape=record,shape=Mrecord,label="{SU(45): CopyToReg|0x1011800}"];
	Node0x1011800 -> Node0x1011910;
	Node0x1011910 [shape=record,shape=Mrecord,label="{SU(46): ADDI|0x1011910}"];
	Node0x1011910 -> Node0x10100a0;
	Node0x1011a20 [shape=record,shape=Mrecord,label="{SU(47): CopyToReg|0x1011a20}"];
	Node0x1011a20 -> Node0x1011c40;
	Node0x1011b30 [shape=record,shape=Mrecord,label="{SU(48): CopyFromReg|0x1011b30}"];
	Node0x1011c40 [shape=record,shape=Mrecord,label="{SU(49): ADDI nsw|0x1011c40}"];
	Node0x1011c40 -> Node0x1011d50;
	Node0x1011d50 [shape=record,shape=Mrecord,label="{SU(50): CopyFromReg|0x1011d50}"];
}
