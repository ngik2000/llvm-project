digraph "scheduler input for addarrays:for.body" {
	rankdir="BT";
	label="scheduler input for addarrays:for.body";

	Node0x22e2ee8 [shape=record,shape=Mrecord,label="{EntryToken|t0|{<d0>ch}}"];
	Node0x23e8f68 [shape=record,shape=Mrecord,label="{Register %13|t1|{<d0>i64}}"];
	Node0x23ecda0 [shape=record,shape=Mrecord,label="{Register %14|t6|{<d0>i64}}"];
	Node0x23ce060 [shape=record,shape=Mrecord,label="{Register %15|t10|{<d0>i64}}"];
	Node0x23b9bd0 [shape=record,shape=Mrecord,label="{Register %16|t14|{<d0>i64}}"];
	Node0x23b9480 [shape=record,shape=Mrecord,label="{Register %17|t18|{<d0>i64}}"];
	Node0x23ece08 [shape=record,shape=Mrecord,label="{Register %18|t22|{<d0>i64}}"];
	Node0x23a3ef8 [shape=record,shape=Mrecord,label="{Register %19|t25|{<d0>i64}}"];
	Node0x239aee0 [shape=record,shape=Mrecord,label="{Register %20|t28|{<d0>i64}}"];
	Node0x23b23a8 [shape=record,shape=Mrecord,label="{BasicBlock\<for.body 0x23c9720\>|t33|{<d0>ch}}"];
	Node0x23eac48 [shape=record,shape=Mrecord,label="{BasicBlock\<for.end 0x23c99a0\>|t35|{<d0>ch}}"];
	Node0x2395328 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t2|{<d0>i64|<d1>ch}}"];
	Node0x2395328:s0 -> Node0x22e2ee8:d0[color=blue,style=dashed];
	Node0x2395328:s1 -> Node0x23e8f68:d0;
	Node0x23bb438 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t7|{<d0>i64|<d1>ch}}"];
	Node0x23bb438:s0 -> Node0x22e2ee8:d0[color=blue,style=dashed];
	Node0x23bb438:s1 -> Node0x23ecda0:d0;
	Node0x23c6650 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t11|{<d0>i64|<d1>ch}}"];
	Node0x23c6650:s0 -> Node0x22e2ee8:d0[color=blue,style=dashed];
	Node0x23c6650:s1 -> Node0x23ce060:d0;
	Node0x23ed488 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|CopyFromReg|t15|{<d0>i64|<d1>ch}}"];
	Node0x23ed488:s0 -> Node0x22e2ee8:d0[color=blue,style=dashed];
	Node0x23ed488:s1 -> Node0x23b9bd0:d0;
	Node0x23b7120 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|LW\<Mem:(load (s32) from %ir.lsr.iv8, !tbaa !48)\>|t40|{<d0>i64|<d1>ch}}"];
	Node0x23b7120:s0 -> Node0x2395328:d0;
	Node0x23b7120:s1 -> Node0x23cdf28:d0;
	Node0x23b7120:s2 -> Node0x22e2ee8:d0[color=blue,style=dashed];
	Node0x23c3da8 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|ADDI|t27|{<d0>i64}}"];
	Node0x23c3da8:s0 -> Node0x2395328:d0;
	Node0x23c3da8:s1 -> Node0x23f3070:d0;
	Node0x23b4840 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|LW\<Mem:(load (s32) from %ir.lsr.iv5, !tbaa !48)\>|t41|{<d0>i64|<d1>ch}}"];
	Node0x23b4840:s0 -> Node0x23bb438:d0;
	Node0x23b4840:s1 -> Node0x23cdf28:d0;
	Node0x23b4840:s2 -> Node0x22e2ee8:d0[color=blue,style=dashed];
	Node0x23c2470 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|ADDI|t24|{<d0>i64}}"];
	Node0x23c2470:s0 -> Node0x23bb438:d0;
	Node0x23c2470:s1 -> Node0x23f3070:d0;
	Node0x23e93e0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|ADDI|t21|{<d0>i64}}"];
	Node0x23e93e0:s0 -> Node0x23c6650:d0;
	Node0x23e93e0:s1 -> Node0x23f3070:d0;
	Node0x23aaff8 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|ADDI|t56|{<d0>i64}}"];
	Node0x23aaff8:s0 -> Node0x23ed488:d0;
	Node0x23aaff8:s1 -> Node0x23a9380:d0;
	Node0x23ce470 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|CopyToReg|t29|{<d0>ch}}"];
	Node0x23ce470:s0 -> Node0x22e2ee8:d0[color=blue,style=dashed];
	Node0x23ce470:s1 -> Node0x239aee0:d0;
	Node0x23ce470:s2 -> Node0x23c3da8:d0;
	Node0x23bbbf0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|ADD|t44|{<d0>i64}}"];
	Node0x23bbbf0:s0 -> Node0x23b4840:d0;
	Node0x23bbbf0:s1 -> Node0x23b7120:d0;
	Node0x23cd7d8 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|TokenFactor|t12|{<d0>ch}}"];
	Node0x23cd7d8:s0 -> Node0x23b7120:d1[color=blue,style=dashed];
	Node0x23cd7d8:s1 -> Node0x23b4840:d1[color=blue,style=dashed];
	Node0x23cdb80 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|CopyToReg|t26|{<d0>ch}}"];
	Node0x23cdb80:s0 -> Node0x22e2ee8:d0[color=blue,style=dashed];
	Node0x23cdb80:s1 -> Node0x23a3ef8:d0;
	Node0x23cdb80:s2 -> Node0x23c2470:d0;
	Node0x23b04c0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|CopyToReg|t23|{<d0>ch}}"];
	Node0x23b04c0:s0 -> Node0x22e2ee8:d0[color=blue,style=dashed];
	Node0x23b04c0:s1 -> Node0x23ece08:d0;
	Node0x23b04c0:s2 -> Node0x23e93e0:d0;
	Node0x23cdec0 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2}|CopyToReg|t19|{<d0>ch}}"];
	Node0x23cdec0:s0 -> Node0x22e2ee8:d0[color=blue,style=dashed];
	Node0x23cdec0:s1 -> Node0x23b9480:d0;
	Node0x23cdec0:s2 -> Node0x23aaff8:d0;
	Node0x23b2a28 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2|<s3>3}|SW\<Mem:(store (s32) into %ir.lsr.iv2, !tbaa !48)\>|t54|{<d0>ch}}"];
	Node0x23b2a28:s0 -> Node0x23bbbf0:d0;
	Node0x23b2a28:s1 -> Node0x23c6650:d0;
	Node0x23b2a28:s2 -> Node0x23cdf28:d0;
	Node0x23b2a28:s3 -> Node0x23cd7d8:d0[color=blue,style=dashed];
	Node0x23a4648 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2|<s3>3|<s4>4}|TokenFactor|t32|{<d0>ch}}"];
	Node0x23a4648:s0 -> Node0x23cdec0:d0[color=blue,style=dashed];
	Node0x23a4648:s1 -> Node0x23b04c0:d0[color=blue,style=dashed];
	Node0x23a4648:s2 -> Node0x23cdb80:d0[color=blue,style=dashed];
	Node0x23a4648:s3 -> Node0x23ce470:d0[color=blue,style=dashed];
	Node0x23a4648:s4 -> Node0x23b2a28:d0[color=blue,style=dashed];
	Node0x23a63f8 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1|<s2>2|<s3>3}|BGEU|t63|{<d0>ch}}"];
	Node0x23a63f8:s0 -> Node0x23aaff8:d0;
	Node0x23a63f8:s1 -> Node0x23ed488:d0;
	Node0x23a63f8:s2 -> Node0x23b23a8:d0[color=blue,style=dashed];
	Node0x23a63f8:s3 -> Node0x23a4648:d0[color=blue,style=dashed];
	Node0x23a6120 [shape=record,shape=Mrecord,label="{{<s0>0|<s1>1}|PseudoBR|t36|{<d0>ch}}"];
	Node0x23a6120:s0 -> Node0x23eac48:d0[color=blue,style=dashed];
	Node0x23a6120:s1 -> Node0x23a63f8:d0[color=blue,style=dashed];
	Node0x23cdf28 [shape=record,shape=Mrecord,label="{TargetConstant\<0\>|t64|{<d0>i64}}"];
	Node0x23a9380 [shape=record,shape=Mrecord,label="{TargetConstant\<1\>|t65|{<d0>i64}}"];
	Node0x23f3070 [shape=record,shape=Mrecord,label="{TargetConstant\<4\>|t66|{<d0>i64}}"];
	Node0x0[ plaintext=circle, label ="GraphRoot"];
	Node0x0 -> Node0x23a6120:d0[color=blue,style=dashed];
}
